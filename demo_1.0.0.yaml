---
swagger: "2.0"
info:
  x-ibm-name: "demo"
  title: "Demo"
  version: "1.0.0"
schemes:
- "https"
host: "$(catalog.host)"
basePath: "/demo"
consumes:
- "application/json"
produces:
- "application/json"
securityDefinitions:
  clientIdHeader:
    type: "apiKey"
    in: "header"
    name: "X-IBM-Client-Id"
security:
- clientIdHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  assembly:
    execute:
    - map:
        title: "NewOperation: input"
        inputs:
          api_parameter-1:
            schema:
              type: "string"
            variable: "request.parameters.api_parameter-1"
        outputs:
          body:
            schema:
              $ref: "#/x-ibm-configuration/targets/EmpWSDL/definitions/NewOperationInput"
            variable: "message.body"
            content: "application/xml"
          content-type:
            schema:
              type: "string"
            variable: "message.headers.content-type"
          SOAPAction:
            schema:
              type: "string"
            variable: "message.headers.SOAPAction"
        actions:
        - set: "content-type"
          default: "text/xml"
        - set: "SOAPAction"
          default: "http://www.example.org/EmpWSDL/NewOperation"
        - set: "body.Envelope.Body.NewOperation.EMPNO"
          from: "api_parameter-1"
    - invoke:
        title: "NewOperation: invoke"
        target-url: "http://192.168.2.153:7801/empwsdl"
        timeout: 60
        verb: "POST"
        cache-response: "protocol"
        cache-ttl: 900
        output: "NewOperationOut"
    - map:
        title: "NewOperation: output"
        inputs:
          input:
            schema:
              $ref: "#/x-ibm-configuration/targets/EmpWSDL/definitions/NewOperationOutput"
            variable: "NewOperationOut.body"
            content: "application/xml"
        outputs:
          output:
            schema:
              type: "object"
              properties:
                out:
                  type: "string"
                  name: "out"
            variable: "message.body"
        actions:
        - set: "output.out"
          from: "input.Envelope.Body.NewOperationResponse.out"
  phase: "realized"
  targets:
    EmpWSDL:
      swagger: "2.0"
      info:
        title: "EmpWSDL"
        description: ""
        x-ibm-name: "empwsdl-1"
        version: "1.0.0"
      schemes:
      - "https"
      basePath: "/EmpWSDL"
      produces:
      - "application/xml"
      consumes:
      - "text/xml"
      securityDefinitions:
        clientID:
          type: "apiKey"
          name: "X-IBM-Client-Id"
          in: "header"
          description: ""
      security:
      - clientID: []
      x-ibm-configuration:
        type: "wsdl"
        wsdl-definition:
          wsdl: "60e54ce1e4b01d72ad5b9866"
          service: "EmpWSDL"
          port: "EmpWSDLSOAP"
          soap-version: "1.1"
        assembly:
          execute:
          - proxy:
              title: "proxy"
              target-url: "http://www.example.org/"
        gateway: "datapower-gateway"
        enforced: true
        testable: true
        phase: "realized"
        cors:
          enabled: true
      paths:
        /NewOperation:
          post:
            summary: "Operation NewOperation"
            description: ""
            operationId: "NewOperation"
            x-ibm-soap:
              soap-action: "http://www.example.org/EmpWSDL/NewOperation"
              soap-operation: "{http://www.example.org/EmpWSDL/}NewOperation"
            parameters:
            - in: "body"
              name: "body"
              required: true
              schema:
                $ref: "#/x-ibm-configuration/targets/EmpWSDL/definitions/NewOperationInput"
            responses:
              default:
                description: ""
                schema:
                  $ref: "#/x-ibm-configuration/targets/EmpWSDL/definitions/NewOperationOutput"
      definitions:
        Security:
          xml:
            namespace: "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
            prefix: "wsse"
          type: "object"
          properties:
            UsernameToken:
              xml:
                namespace: "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
                prefix: "wsse"
              type: "object"
              properties:
                Username:
                  xml:
                    namespace: "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
                    prefix: "wsse"
                  type: "string"
                Password:
                  xml:
                    namespace: "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
                    prefix: "wsse"
                  type: "string"
                Nonce:
                  xml:
                    namespace: "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
                    prefix: "wsse"
                  type: "string"
                  properties:
                    EncodingType:
                      xml:
                        namespace: ""
                        attribute: true
                      type: "string"
                Created:
                  xml:
                    namespace: "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
                    prefix: "wsu"
                  type: "string"
            Timestamp:
              xml:
                namespace: "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
                prefix: "wsu"
              type: "object"
              properties:
                Created:
                  xml:
                    namespace: "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
                    prefix: "wsu"
                  type: "string"
                Expires:
                  xml:
                    namespace: "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
                    prefix: "wsu"
                  type: "string"
                Id:
                  xml:
                    namespace: "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
                    prefix: "wsu"
                    attribute: true
                  type: "string"
        NewOperationInput:
          type: "object"
          properties:
            Envelope:
              xml:
                prefix: "soapenv"
                namespace: "http://schemas.xmlsoap.org/soap/envelope/"
              type: "object"
              properties:
                Header:
                  $ref: "#/x-ibm-configuration/targets/EmpWSDL/definitions/NewOperationHeader"
                Body:
                  type: "object"
                  properties:
                    NewOperation:
                      $ref: "#/x-ibm-configuration/targets/EmpWSDL/definitions/NewOperation_tns"
                  required:
                  - "NewOperation"
              required:
              - "Body"
          required:
          - "Envelope"
          example: "\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"\
            >\n <soapenv:Header>\n  <wsse:Security xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\"\
            \ xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"\
            >\n   <wsse:UsernameToken>\n    <wsse:Username>string</wsse:Username>\n\
            \    <wsse:Password>string</wsse:Password>\n    <wsse:Nonce EncodingType=\"\
            string\">string</wsse:Nonce>\n    <wsu:Created>string</wsu:Created>\n\
            \   </wsse:UsernameToken>\n   <wsu:Timestamp wsu:Id=\"string\">\n    <wsu:Created>string</wsu:Created>\n\
            \    <wsu:Expires>string</wsu:Expires>\n   </wsu:Timestamp>\n  </wsse:Security>\n\
            \ </soapenv:Header>\n <soapenv:Body>\n  <tns:NewOperation xmlns:tns=\"\
            http://www.example.org/EmpWSDL/\"><!-- mandatory -->\n   <EMPNO><!-- mandatory\
            \ -->string</EMPNO>\n  </tns:NewOperation>\n </soapenv:Body>\n</soapenv:Envelope>"
        NewOperationHeader:
          type: "object"
          properties:
            Security:
              $ref: "#/x-ibm-configuration/targets/EmpWSDL/definitions/Security"
        NewOperationOutput:
          type: "object"
          properties:
            Envelope:
              xml:
                prefix: "soapenv"
                namespace: "http://schemas.xmlsoap.org/soap/envelope/"
              type: "object"
              properties:
                Body:
                  type: "object"
                  properties:
                    NewOperationResponse:
                      $ref: "#/x-ibm-configuration/targets/EmpWSDL/definitions/NewOperationResponse_tns"
              required:
              - "Body"
          required:
          - "Envelope"
          example: "\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"\
            >\n <soapenv:Body>\n  <tns:NewOperationResponse xmlns:tns=\"http://www.example.org/EmpWSDL/\"\
            >\n   <out><!-- mandatory -->string</out>\n  </tns:NewOperationResponse>\n\
            \ </soapenv:Body>\n</soapenv:Envelope>"
        NewOperation_tns:
          xml:
            namespace: "http://www.example.org/EmpWSDL/"
            prefix: "tns"
          type: "object"
          properties:
            EMPNO:
              type: "string"
              xml:
                namespace: ""
                prefix: ""
          required:
          - "EMPNO"
          example: "\n<tns:NewOperation xmlns:tns=\"http://www.example.org/EmpWSDL/\"\
            >\n <EMPNO><!-- mandatory -->string</EMPNO>\n</tns:NewOperation>"
        NewOperationResponse_tns:
          xml:
            namespace: "http://www.example.org/EmpWSDL/"
            prefix: "tns"
          type: "object"
          properties:
            out:
              type: "string"
              xml:
                namespace: ""
                prefix: ""
          required:
          - "out"
          example: "\n<tns:NewOperationResponse xmlns:tns=\"http://www.example.org/EmpWSDL/\"\
            >\n <out><!-- mandatory -->string</out>\n</tns:NewOperationResponse>"
paths:
  /path-1:
    get:
      responses:
        200:
          description: "200 OK"
      parameters:
      - name: "api_parameter-1"
        required: false
        in: "query"
        type: "string"
definitions: {}
tags: []
